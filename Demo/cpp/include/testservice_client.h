// Generated by BitRPC Protocol Generator
// File: TestService_client.h
// Language: Cpp

#pragma once

#include "../runtime/client.h"
#include "./models.h"
#include <future>

namespace bitrpc {
namespace example::protocol {

class TestServiceClient : public BaseClient {
public:
    explicit TestServiceClient(std::shared_ptr<IRpcClient> client);

    std::future<LoginResponse> LoginAsync(const LoginRequest& request);
    std::future<GetUserResponse> GetUserAsync(const GetUserRequest& request);
    std::future<EchoResponse> EchoAsync(const EchoRequest& request);
    std::shared_ptr<StreamResponseReader> StreamUsersStreamAsync(const GetUserRequest& request);

    static std::shared_ptr<TestServiceClient> create_tcp_client(const std::string& host, int port);
};

}} // namespace bitrpc
