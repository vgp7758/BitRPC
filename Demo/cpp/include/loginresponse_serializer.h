// Generated by BitRPC Protocol Generator
// File: LoginResponse_serializer.h
// Language: Cpp

#pragma once

#include "./serializer_registry.h"
#include "./models.h"

namespace bitrpc {
namespace test::protocol {

inline bool is_default_loginresponse(const LoginResponse* value);
inline bool is_default_loginresponse(const LoginResponse& value);

class LoginResponseSerializer : public TypeHandler {
public:
    int hash_code() const override;
    void write(const void* obj, StreamWriter& writer) const override;
    void* read(StreamReader& reader) const override;
    bool is_default(const void* obj) const override { return is_default_loginresponse(static_cast<const LoginResponse*>(obj)); }

    static LoginResponseSerializer& instance() { static LoginResponseSerializer inst; return inst; }

    static void serialize(const LoginResponse& obj, StreamWriter& writer);
    static std::unique_ptr<LoginResponse> deserialize(StreamReader& reader);
};

inline bool is_default_loginresponse(const LoginResponse* value) {
    if (value == nullptr) return true;
    const auto& obj = *value;
    if (obj.success != false) return false;
    if (!is_default_userinfo(&obj.user)) return false;
    if (obj.token != "") return false;
    if (obj.error_message != "") return false;
    return true;
}

inline bool is_default_loginresponse(const LoginResponse& value) { return is_default_loginresponse(&value); }

}} // namespace bitrpc
