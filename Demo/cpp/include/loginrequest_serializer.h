// Generated by BitRPC Protocol Generator
// File: LoginRequest_serializer.h
// Language: Cpp

#pragma once

#include "./serializer_registry.h"

namespace bitrpc {
namespace test::protocol {

class LoginRequestSerializer : public TypeHandler {
public:
    int hash_code() const override;
    void write(const void* obj, StreamWriter& writer) const override;
    void* read(StreamReader& reader) const override;
    bool is_default(const void* obj) const override;

    // Singleton instance
    static LoginRequestSerializer& instance() {
        static LoginRequestSerializer instance;
        return instance;
    }

    // Static convenience methods (aligns with C#)
    static void serialize(const LoginRequest& obj, StreamWriter& writer);
    static std::unique_ptr<LoginRequest> deserialize(StreamReader& reader);

private:
    bool is_default_string_username(const std::string& value) const;
    bool is_default_string_password(const std::string& value) const;
};

}} // namespace bitrpc
