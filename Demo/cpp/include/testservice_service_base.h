// Generated by BitRPC Protocol Generator
// File: TestService_service_base.h
// Language: Cpp

#pragma once

#include "../runtime/server.h"
#include "./itestservice_service.h"

namespace bitrpc {
namespace test::protocol {

class TestServiceServiceBase : public EnhancedBaseService, public ITestServiceService {
public:
    TestServiceServiceBase();
    std::future<LoginResponse> LoginAsync(const LoginRequest& request) override;
    std::future<GetUserResponse> GetUserAsync(const GetUserRequest& request) override;
    std::future<EchoResponse> EchoAsync(const EchoRequest& request) override;
    static void register_with_manager(ServiceManager& manager);

protected:
    void register_methods() override;
    virtual std::future<LoginResponse> LoginAsync_impl(const LoginRequest& request) = 0;
    virtual std::future<GetUserResponse> GetUserAsync_impl(const GetUserRequest& request) = 0;
    virtual std::future<EchoResponse> EchoAsync_impl(const EchoRequest& request) = 0;
};

}} // namespace bitrpc
