// Generated by BitRPC Protocol Generator
// File: TestService_service_base.cpp
// Language: Cpp

#include "Test::Protocol/testservice_service_base.h"

namespace bitrpc {
namespace Test::Protocol {

TestServiceServiceBase::TestServiceServiceBase() {
    register_methods();
}

void {service.Name}ServiceBase::register_methods() {
    register_method("Login", [this](const void* request) -> void* {
        auto result = LoginAsync_impl(*static_cast<const LoginRequest*>(request));
        return new LoginResponse(result.get());
    });
    register_method("GetUser", [this](const void* request) -> void* {
        auto result = GetUserAsync_impl(*static_cast<const GetUserRequest*>(request));
        return new GetUserResponse(result.get());
    });
    register_method("Echo", [this](const void* request) -> void* {
        auto result = EchoAsync_impl(*static_cast<const EchoRequest*>(request));
        return new EchoResponse(result.get());
    });
}

std::future<LoginResponse> TestServiceServiceBase::LoginAsync(const LoginRequest& request) {
    return LoginAsync_impl(request);
}

std::future<GetUserResponse> TestServiceServiceBase::GetUserAsync(const GetUserRequest& request) {
    return GetUserAsync_impl(request);
}

std::future<EchoResponse> TestServiceServiceBase::EchoAsync(const EchoRequest& request) {
    return EchoAsync_impl(request);
}

}} // namespace bitrpc
