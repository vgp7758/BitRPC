// Generated by BitRPC Protocol Generator
// File: LoginRequest_serializer.cpp
// Language: Cpp

#include "Test::Protocol/loginrequest_serializer.h"

namespace bitrpc {
namespace Test::Protocol {

int LoginRequestSerializer::hash_code() const {
    return 175975135;
}

void LoginRequestSerializer::write(const void* obj, StreamWriter& writer) const {
    const auto& obj_ref = *static_cast<const LoginRequest*>(obj);
    BitMask mask;

    // Bit mask group 0
    mask.set_bit(0, !is_default_string(obj_ref.username));
    mask.set_bit(1, !is_default_string(obj_ref.password));
    mask.write(writer);

    // Write field values
    if (mask.get_bit(0)) {
        writer.write_string(obj_ref.username);
    }
    if (mask.get_bit(1)) {
        writer.write_string(obj_ref.password);
    }
}

void* LoginRequestSerializer::read(StreamReader& reader) const {
    auto obj_ptr = std::make_unique<LoginRequest>();

    // Read bit mask group 0
    BitMask mask0;
    mask0.read(reader);

    if (mask0.get_bit(0)) {
        obj_ptr->username = reader.read_string();
    }
    if (mask0.get_bit(1)) {
        obj_ptr->password = reader.read_string();
    }
    return obj_ptr.release();
}
};

bool LoginRequestSerializer::is_default_string(const std::string& value) const {
    return value == "";
}

}} // namespace bitrpc
