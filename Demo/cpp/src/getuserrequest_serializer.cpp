// Generated by BitRPC Protocol Generator
// File: GetUserRequest_serializer.cpp
// Language: Cpp

#include "Test::Protocol/getuserrequest_serializer.h"

namespace bitrpc {
namespace Test::Protocol {

int GetUserRequestSerializer::hash_code() const {
    return 727038621;
}

void GetUserRequestSerializer::write(const void* obj, StreamWriter& writer) const {
    const auto& obj_ref = *static_cast<const GetUserRequest*>(obj);
    BitMask mask;

    // Bit mask group 0
    mask.set_bit(0, !is_default_int64(obj_ref.user_id));
    mask.write(writer);

    // Write field values
    if (mask.get_bit(0)) {
        writer.write_int64(obj_ref.user_id);
    }
}

void* GetUserRequestSerializer::read(StreamReader& reader) const {
    auto obj_ptr = std::make_unique<GetUserRequest>();

    // Read bit mask group 0
    BitMask mask0;
    mask0.read(reader);

    if (mask0.get_bit(0)) {
        obj_ptr->user_id = reader.read_int64();
    }
    return obj_ptr.release();
}
};

bool GetUserRequestSerializer::is_default_int64(const int64_t& value) const {
    return value == 0;
}

}} // namespace bitrpc
