# Generated by BitRPC Protocol Generator
# File: TestService_service_base.py
# Language: Python
# Date: 2025-09-25 19:56:07


from .runtime.bitrpc.server import BaseService, ServiceManager
from .itestservice_service import ITestServiceService

class TestServiceServiceBase(BaseService, ITestServiceService):
    """Base implementation for TestService service"""

    @property
    def service_name(self) -> str:
        return "TestService"

    def _register_methods(self) -> None:
        """Register service methods"""
        self.register_method("Login", self.Login_async)
        self.register_method("GetUser", self.GetUser_async)
        self.register_method("Echo", self.Echo_async)

    async def Login_async(self, request: LoginRequest) -> LoginResponse:
        """Login method - to be implemented by derived classes"""
        raise NotImplementedError("Method not implemented")

    async def GetUser_async(self, request: GetUserRequest) -> GetUserResponse:
        """GetUser method - to be implemented by derived classes"""
        raise NotImplementedError("Method not implemented")

    async def Echo_async(self, request: EchoRequest) -> EchoResponse:
        """Echo method - to be implemented by derived classes"""
        raise NotImplementedError("Method not implemented")

    @classmethod
    def register_with_manager(cls, manager: ServiceManager) -> None:
        """Register this service with a service manager"
        manager.register_service(cls())

