# Generated by BitRPC Protocol Generator
# File: UserInfo_serializer.py
# Language: Python
# Date: 2025-09-25 20:15:44


from typing import Any
from .runtime.bitrpc.serialization import TypeHandler, BitMask, StreamWriter, StreamReader
from ..data.models import UserInfo

class UserInfoSerializer(TypeHandler):

    @property
    def hash_code(self) -> int:
        return 1876671786

    def write(self, obj: UserInfo, writer: StreamWriter) -> None:
        message: UserInfo = obj
        mask = BitMask()

        # Bit mask group 0
        mask.set_bit(0, not self._is_default_int64(message.user_id))
        mask.set_bit(1, not self._is_default_string(message.username))
        mask.set_bit(2, not self._is_default_string(message.email))
        mask.set_bit(3, not self._is_default_string(message.roles))
        mask.set_bit(4, not self._is_default_bool(message.is_active))
        mask.set_bit(5, not self._is_default_datetime(message.created_at))
        mask.write(writer)

        # Write field values
        if mask.get_bit(0):
            writer.write_int64(message.user_id)
        if mask.get_bit(1):
            writer.write_string(message.username)
        if mask.get_bit(2):
            writer.write_string(message.email)
        if mask.get_bit(3):
            writer.write_list(message.roles, lambda x: writer.write_string(x))
        if mask.get_bit(4):
            writer.write_bool(message.is_active)
        if mask.get_bit(5):
            writer.write_object(message.created_at)

    def read(self, reader: StreamReader) -> UserInfo:
        message = UserInfo()

        # Read bit mask group 0
        mask0 = BitMask()
        mask0.read(reader)

        if mask0.get_bit(0):
            message.user_id = reader.read_int64()
        if mask0.get_bit(1):
            message.username = reader.read_string()
        if mask0.get_bit(2):
            message.email = reader.read_string()
        if mask0.get_bit(3):
            message.roles = reader.read_list(lambda: reader.read_string())
        if mask0.get_bit(4):
            message.is_active = reader.read_bool()
        if mask0.get_bit(5):
            message.created_at = reader.read_object()

        return message

    def _is_default_int64(self, value: int) -> bool:
        return value == 0

    def _is_default_string(self, value: str) -> bool:
        return value == ""

    def _is_default_bool(self, value: bool) -> bool:
        return value == False

    def _is_default_datetime(self, value: datetime) -> bool:
        return value == None

