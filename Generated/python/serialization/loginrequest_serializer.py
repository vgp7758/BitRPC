# Generated by BitRPC Protocol Generator
# File: LoginRequest_serializer.py
# Language: Python
# Date: 2025-09-25 20:15:44


from typing import Any
from .runtime.bitrpc.serialization import TypeHandler, BitMask, StreamWriter, StreamReader
from ..data.models import LoginRequest

class LoginRequestSerializer(TypeHandler):

    @property
    def hash_code(self) -> int:
        return 175975135

    def write(self, obj: LoginRequest, writer: StreamWriter) -> None:
        message: LoginRequest = obj
        mask = BitMask()

        # Bit mask group 0
        mask.set_bit(0, not self._is_default_string(message.username))
        mask.set_bit(1, not self._is_default_string(message.password))
        mask.write(writer)

        # Write field values
        if mask.get_bit(0):
            writer.write_string(message.username)
        if mask.get_bit(1):
            writer.write_string(message.password)

    def read(self, reader: StreamReader) -> LoginRequest:
        message = LoginRequest()

        # Read bit mask group 0
        mask0 = BitMask()
        mask0.read(reader)

        if mask0.get_bit(0):
            message.username = reader.read_string()
        if mask0.get_bit(1):
            message.password = reader.read_string()

        return message

    def _is_default_string(self, value: str) -> bool:
        return value == ""

