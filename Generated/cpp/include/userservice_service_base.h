// Generated by BitRPC Protocol Generator
// File: UserService_service_base.h
// Language: Cpp
// Date: 2025-09-11 10:42:22


#pragma once

#include <bitrpc/server/base_service.h>
#include "example::protocol/iuserservice_service.h"

namespace bitrpc {
namespace example::protocol {

class UserServiceServiceBase : public BaseService, public IUserServiceService {
public:
    UserServiceServiceBase();
    std::future<LoginResponse> Login_async(const LoginRequest& request) override;
    std::future<GetUserResponse> GetUser_async(const GetUserRequest& request) override;

protected:
    void register_methods() override;
    virtual std::future<LoginResponse> Login_async_impl(const LoginRequest& request) = 0;
    virtual std::future<GetUserResponse> GetUser_async_impl(const GetUserRequest& request) = 0;
};

}} // namespace bitrpc
