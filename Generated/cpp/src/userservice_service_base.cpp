// Generated by BitRPC Protocol Generator
// File: UserService_service_base.cpp
// Language: Cpp
// Date: 2025-09-11 10:42:22


#include "example::protocol/userservice_service_base.h"

namespace bitrpc {
namespace example::protocol {

UserServiceServiceBase::UserServiceServiceBase() {
    register_methods();
}

void {service.Name}ServiceBase::register_methods() {
    register_method("Login", [this](const void* request) -> void* {
        auto result = Login_async_impl(*static_cast<const LoginRequest*>(request));
        return new LoginResponse(result.get());
    });
    register_method("GetUser", [this](const void* request) -> void* {
        auto result = GetUser_async_impl(*static_cast<const GetUserRequest*>(request));
        return new GetUserResponse(result.get());
    });
}

std::future<LoginResponse> UserServiceServiceBase::Login_async(const LoginRequest& request) {
    return Login_async_impl(request);
}

std::future<GetUserResponse> UserServiceServiceBase::GetUser_async(const GetUserRequest& request) {
    return GetUser_async_impl(request);
}

}} // namespace bitrpc
